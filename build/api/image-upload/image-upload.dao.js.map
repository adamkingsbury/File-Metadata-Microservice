{"version":3,"sources":["../../../server/api/image-upload/image-upload.dao.js"],"names":["statics","getAll","resolve","reject","_query","imageUpload","find","select","sort","uploadedAt","exec","err","todos","createNew","uploadObject","isObject","TypeError","_something","save","saved","getById","id","includeImage","isString","img","findById","result","removeById","findByIdAndRemove","deleted","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,sBAAkBA,OAAlB,CAA0BC,MAA1B,GAAmC,YAAM;AACvC,SAAO,uBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,SAAS,EAAb;;AAEAC,gBACCC,IADD,CACMF,MADN,EAECG,MAFD,CAEQ,cAFR,EAGCC,IAHD,CAGM,EAACC,YAAY,MAAb,EAHN,EAICC,IAJD,CAIM,UAASC,GAAT,EAAcC,KAAd,EAAqB;AACzBD,YAAMR,OAAOQ,GAAP,CAAN,GACET,QAAQU,KAAR,CADF;AAED,KAPD;AAQD,GAXM,CAAP;AAYD,CAbD;;AAeA,sBAAkBZ,OAAlB,CAA0Ba,SAA1B,GAAsC,UAACC,YAAD,EAAkB;AACpD,SAAO,uBAAY,UAACZ,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI,CAAC,iBAAEY,QAAF,CAAWD,YAAX,CAAL,EAA+B;AAC7B,aAAOX,OAAO,IAAIa,SAAJ,CAAc,oCAAd,CAAP,CAAP;AACD;AACD,QAAIC,aAAa,IAAIZ,WAAJ,CAAgBS,YAAhB,CAAjB;AACAG,eAAWC,IAAX,CAAgB,UAASP,GAAT,EAAcQ,KAAd,EAAqB;AACnCR,YAAMR,OAAOQ,GAAP,CAAN,GACET,QAAQiB,KAAR,CADF;AAED,KAHD;AAID,GATM,CAAP;AAUH,CAXD;;AAaA,sBAAkBnB,OAAlB,CAA0BoB,OAA1B,GAAoC,UAACC,EAAD,EAAKC,YAAL,EAAsB;AACxD,SAAO,uBAAY,UAACpB,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI,CAAC,iBAAEoB,QAAF,CAAWF,EAAX,CAAL,EAAqB;AACnB,aAAOlB,OAAO,IAAIa,SAAJ,CAAc,2BAAd,CAAP,CAAP;AACD;;AAED,QAAIQ,MAAMnB,YAAYoB,QAAZ,CAAqBJ,EAArB,CAAV;AACA,QAAI,CAACC,YAAL,EAAmBE,IAAIjB,MAAJ,CAAW,cAAX;AACnBiB,QAAId,IAAJ,CAAS,UAASC,GAAT,EAAce,MAAd,EAAsB;AAC7Bf,YAAMR,OAAOQ,GAAP,CAAN,GACET,QAAQwB,MAAR,CADF;AAED,KAHD;AAID,GAXM,CAAP;AAYD,CAbD;;AAeA,sBAAkB1B,OAAlB,CAA0B2B,UAA1B,GAAuC,UAACN,EAAD,EAAQ;;AAE7C,SAAO,uBAAY,UAACnB,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI,CAAC,iBAAEoB,QAAF,CAAWF,EAAX,CAAL,EAAqB;AACnB,aAAOlB,OAAO,IAAIa,SAAJ,CAAc,2BAAd,CAAP,CAAP;AACD;;AAEDX,gBACCuB,iBADD,CACmBP,EADnB,EAECX,IAFD,CAEM,UAASC,GAAT,EAAckB,OAAd,EAAuB;AAC3BlB,YAAMR,OAAOQ,GAAP,CAAN,GACET,SADF;AAED,KALD;AAMD,GAXM,CAAP;AAYD,CAdD;;AAgBA,IAAMG,cAAc,mBAASyB,KAAT,CAAe,aAAf,wBAApB;;kBAEezB,W","file":"image-upload.dao.js","sourcesContent":["import mongoose from 'mongoose';\nimport Promise from 'bluebird';\nimport imageUploadSchema from './image-upload.model';\nimport _ from 'lodash';\n\nimageUploadSchema.statics.getAll = () => {\n  return new Promise((resolve, reject) => {\n    let _query = {};\n\n    imageUpload\n    .find(_query)\n    .select('-imageBase64')\n    .sort({uploadedAt: 'desc'})\n    .exec(function(err, todos) {\n      err ? reject(err)\n      : resolve(todos);\n    });\n  });\n}\n\nimageUploadSchema.statics.createNew = (uploadObject) => {\n    return new Promise((resolve, reject) => {\n      if (!_.isObject(uploadObject)) {\n        return reject(new TypeError('imageUpload is not a valid object.'));\n      }\n      var _something = new imageUpload(uploadObject);\n      _something.save(function(err, saved) {\n        err ? reject(err)\n        : resolve(saved);\n      });\n    });\n}\n\nimageUploadSchema.statics.getById = (id, includeImage) => {\n  return new Promise((resolve, reject) => {\n    if (!_.isString(id)) {\n      return reject(new TypeError('Id is not a valid string.'));\n    }\n\n    var img = imageUpload.findById(id);\n    if (!includeImage) img.select(\"-imageBase64\");\n    img.exec(function(err, result) {\n      err ? reject(err)\n      : resolve(result);\n    });\n  });\n}\n\nimageUploadSchema.statics.removeById = (id) => {\n\n  return new Promise((resolve, reject) => {\n    if (!_.isString(id)) {\n      return reject(new TypeError('Id is not a valid string.'));\n    }\n\n    imageUpload\n    .findByIdAndRemove(id)\n    .exec(function(err, deleted) {\n      err ? reject(err)\n      : resolve();\n    });\n  });\n}\n\nconst imageUpload = mongoose.model('imageUpload', imageUploadSchema);\n\nexport default imageUpload;\n"]}